@{
    ViewData["Title"] = "Admin Services";
}

<head>
    <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/admin_services.css" asp-append-version="true">
    <style>
        @@media screen and (max-width: 1200px) {
            .table-data {
                grid-template-columns: 1fr;
                gap: 20px;
            }
            
            .head-title {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .filter-options {
                margin-top: 15px;
                width: 100%;
                flex-wrap: wrap;
            }
        }
        
        @@media screen and (max-width: 768px) {
            #sidebar {
                width: 60px;
            }
            
            #sidebar .brand .text,
            #sidebar .side-menu li a .text {
                display: none;
            }
            
            #content {
                width: calc(100% - 60px);
                left: 60px;
            }
            
            .table-container {
                overflow-x: auto;
            }
            
            table {
                min-width: 600px;
            }
            
            .head-title h1 {
                font-size: 24px;
            }
            
            .filter-options {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .filter-options select,
            .filter-options .search-box {
                width: 100%;
                margin-bottom: 10px;
            }
        }
        
        @@media screen and (max-width: 576px) {
            #content nav .form-input {
                display: none;
            }
            
            #content nav .form-input.show {
                display: block;
                width: 100%;
                position: absolute;
                top: 100%;
                left: 0;
                padding: 10px;
                background: var(--light);
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                z-index: 100;
            }
            
            .head-title {
                padding: 15px;
            }
            
            .table-data {
                padding: 15px;
            }
            
            .modal-content {
                width: 95%;
                padding: 15px;
            }
        }
    </style>
</head>

<title>Admin Services</title>
<body>
    <!-- SIDEBAR -->
    <section id="sidebar">
        <a href="#" class="brand">
            <i class='bx bxs-smile'></i>
            <span class="text">Admin</span>
        </a>
        <ul class="side-menu top">
            <li>
                <a asp-area="" asp-controller="Admin" asp-action="Dashboard">
                    <i class='bx bxs-dashboard'></i>
                    <span class="text">Dashboard</span>
                </a>
            </li>
            <li>
                <a href="#">
                    <i class='bx bxs-user'></i>
                    <span class="text">Profile</span>
                </a>
            </li>
            <li>
                <a href="#">
                    <i class='bx bxs-megaphone'></i>
                    <span class="text">Announcement</span>
                </a>
            </li>
            <li>
                <a href="#">
                    <i class='bx bxs-credit-card-front'></i>
                    <span class="text">Payment and Billing</span>
                </a>
            </li>
            <li class="active">
                <a asp-area="" asp-controller="Admin" asp-action="Services">
                    <i class='bx bxs-briefcase'></i>
                    <span class="text">Services</span>
                </a>
            </li>
            <li>
                <a href="#">
                    <i class='bx bxs-shield-alt-2'></i>
                    <span class="text">Security and Visitors</span>
                </a>
            </li>
        </ul>
        <ul class="side-menu">
            <li>
                <a href="#">
                    <i class='bx bxs-cog'></i>
                    <span class="text">Settings</span>
                </a>
            </li>
            <li>
                <a asp-action="logout" class="logout">
                    <i class='bx bxs-log-out-circle'></i>
                    <span class="text">Logout</span>
                </a>
            </li>
        </ul>
    </section>
    <!-- SIDEBAR -->

    <!-- CONTENT -->
    <section id="content">
        <!-- NAVBAR -->
        <nav>
            <i class='bx bx-menu'></i>
            <form action="#">
                <div class="form-input">
                    <input type="search" placeholder="Search...">
                    <button type="submit" class="search-btn"><i class='bx bx-search'></i></button>
                </div>
            </form>
            <input type="checkbox" id="switch-mode" hidden>
            <label for="switch-mode" class="switch-mode"></label>
        </nav>
        <!-- NAVBAR -->

        <!-- MAIN -->
        <main>
            <div class="head-title">
                <div class="left">
                    <h1>Service Request Management</h1>
                </div>
                <div class="filter-options">
                    <select id="statusFilter" onchange="filterRequests()">
                        <option value="all">All Status</option>
                        <option value="pending">Pending</option>
                        <option value="accepted">Accepted</option>
                        <option value="rejected">Rejected</option>
                        <option value="in-progress">In Progress</option>
                        <option value="completed">Completed</option>
                    </select>
                    <select id="typeFilter" onchange="filterRequests()">
                        <option value="all">All Types</option>
                        <option value="maintenance">Maintenance</option>
                        <option value="security">Security</option>
                        <option value="landscaping">Landscaping</option>
                        <option value="facility">Facility</option>
                    </select>
                    <div class="search-box">
                        <i class='bx bx-search'></i>
                        <input type="text" id="searchInput" placeholder="Search requests..." onkeyup="filterRequests()">
                    </div>
                </div>
            </div>

            <div class="table-data">
                <div class="order">
                    <div class="head">
                        <h3>Service Requests</h3>
                    </div>
                    <div class="table-container">
                        <table>
                            <thead>
                                <tr>
                                    <th>Request ID</th>
                                    <th>Homeowner</th>
                                    <th>Service Type</th>
                                    <th>Priority</th>
                                    <th>Status</th>
                                    <th>Date Submitted</th>
                                    <th>Assigned Staff</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="requestsTableBody">
                                <!-- DYNAMIC -->
                            </tbody>
                        </table>
                    </div>
                    <div class="pagination">
                        <button id="prevPage" onclick="changePage(-1)">Previous</button>
                        <span id="pageInfo">Page 1 of 1</span>
                        <button id="nextPage" onclick="changePage(1)">Next</button>
                    </div>
                </div>

                <div class="todo">
                    <div class="head">
                        <h3>Quick Stats</h3>
                    </div>
                    <ul class="todo-list">
                        <li class="completed">
                            <p>Total Requests</p>
                            <p>24</p>
                            <i class='bx bx-list-ul'></i>
                        </li>
                        <li class="completed">
                            <p>Pending</p>
                            <p>8</p>
                            <i class='bx bx-time'></i>
                        </li>
                        <li class="completed">
                            <p>In Progress</p>
                            <p>12</p>
                            <i class='bx bx-loader-alt'></i>
                        </li>
                        <li class="completed">
                            <p>Completed</p>
                            <p>4</p>
                            <i class='bx bx-check-circle'></i>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- STAFF ASSIGNMENT SECTION -->
            <div class="staff-assignment">
                <div class="head">
                    <h3>Staff Assignment</h3>
                </div>
                <div class="table-container">
                    <table>
                        <thead>
                            <tr>
                                <th>Staff ID</th>
                                <th>Name</th>
                                <th>Position</th>
                                <th>Assigned Requests</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="staffTableBody">
                            <!-- DYNAMIC -->
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
        <!-- MAIN -->
    </section>

    <!-- REQUEST DETAILS MODAL -->
    <div id="requestDetailsModal" class="modal" style="display:none;">
        <div class="modal-content">
            <span class="close-btn" onclick="closeModal('requestDetailsModal')">&times;</span>
            <h2>Request Details</h2>
            <div id="requestDetailsContent"></div>
        </div>
    </div>

    <!-- ASSIGN STAFF MODAL -->
    <div id="assignStaffModal" class="modal" style="display:none;">
        <div class="modal-content">
            <span class="close-btn" onclick="closeModal('assignStaffModal')">&times;</span>
            <h2>Assign Staff</h2>
            <form id="assignStaffForm">
                <input type="hidden" id="assignRequestId">
                <div>
                    <label for="staffSelect">Select Staff:</label>
                    <select id="staffSelect" required></select>
                </div>
                <button type="submit">Assign</button>
            </form>
        </div>
    </div>

    <script>
        // SIDEBAR TOGGLE
        const menuBar = document.querySelector('#content nav .bx-menu');
        const sidebar = document.getElementById('sidebar');

        menuBar.addEventListener('click', function () {
            sidebar.classList.toggle('hide');
        });

        // DARK MODE
        const switchMode = document.getElementById('switch-mode');
        switchMode.addEventListener('change', function () {
            if(this.checked) {
                document.body.classList.add('dark');
            } else {
                document.body.classList.remove('dark');
            }
        });

        // SAMPLE DATA
        const sampleRequests = [
            {
                id: 'SR-001',
                homeowner: 'John Doe',
                serviceType: 'Maintenance',
                priority: 'High',
                status: 'pending',
                dateSubmitted: '2024-03-15',
                assignedStaff: 'Not Assigned',
                description: 'Plumbing issue in the bathroom'
            },
            {
                id: 'SR-002',
                homeowner: 'Jane Smith',
                serviceType: 'Security',
                priority: 'Urgent',
                status: 'in-progress',
                dateSubmitted: '2024-03-16',
                assignedStaff: 'Staff-001',
                description: 'Security camera not working'
            }
        ];

        const sampleStaff = [
            {
                id: 'Staff-001',
                name: 'Michael Johnson',
                position: 'Maintenance Technician',
                assignedRequests: 3
            },
            {
                id: 'Staff-002',
                name: 'Sarah Williams',
                position: 'Security Officer',
                assignedRequests: 2
            }
        ];

        let currentPage = 1;
        const itemsPerPage = 5;
        let filteredRequests = [...sampleRequests];

        // INITIALIZE TABLES
        function initializeTables() {
            updateRequestsTable();
            updateStaffTable();
            updatePagination();
        }

        // UPDATE REQUESTS TABLE
        function updateRequestsTable() {
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;
            const currentPageData = filteredRequests.slice(startIndex, endIndex);

            const tableBody = document.getElementById('requestsTableBody');
            tableBody.innerHTML = '';

            currentPageData.forEach(request => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>#${request.id}</td>
                    <td>${request.homeowner}</td>
                    <td>${request.serviceType}</td>
                    <td>${request.priority}</td>
                    <td><span class="status ${request.status}">${getStatusText(request.status)}</span></td>
                    <td>${request.dateSubmitted}</td>
                    <td>${request.assignedStaff}</td>
                    <td>
                        <div class="action-buttons">
                            <button class="action-btn view" onclick="viewRequestDetails('${request.id}')" title="View Details">
                                <i class='bx bx-detail'></i>
                            </button>
                            <button class="action-btn assign" onclick="openAssignStaffModal('${request.id}')" title="Assign Staff">
                                <i class='bx bx-user-plus'></i>
                            </button>
                        </div>
                    </td>
                `;
                tableBody.appendChild(row);
            });
        }

        // UPDATE STAFF TABLE
        function updateStaffTable() {
            const tableBody = document.getElementById('staffTableBody');
            tableBody.innerHTML = '';

            sampleStaff.forEach(staff => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${staff.id}</td>
                    <td>${staff.name}</td>
                    <td>${staff.position}</td>
                    <td>${staff.assignedRequests}</td>
                    <td>
                        <button class="action-btn view" onclick="viewStaffDetails('${staff.id}')" title="View Details">
                            <i class='bx bx-detail'></i>
                        </button>
                    </td>
                `;
                tableBody.appendChild(row);
            });
        }

        // FILTER REQUESTS
        function filterRequests() {
            const statusFilter = document.getElementById('statusFilter').value;
            const typeFilter = document.getElementById('typeFilter').value;
            const searchText = document.getElementById('searchInput').value.toLowerCase();

            filteredRequests = sampleRequests.filter(request => {
                const matchesStatus = statusFilter === 'all' || request.status === statusFilter;
                const matchesType = typeFilter === 'all' || request.serviceType.toLowerCase() === typeFilter;
                const matchesSearch = request.id.toLowerCase().includes(searchText) ||
                                    request.homeowner.toLowerCase().includes(searchText) ||
                                    request.serviceType.toLowerCase().includes(searchText);

                return matchesStatus && matchesType && matchesSearch;
            });

            currentPage = 1;
            updateRequestsTable();
            updatePagination();
        }

        // PAGINATION
        function updatePagination() {
            const totalPages = Math.ceil(filteredRequests.length / itemsPerPage);
            document.getElementById('pageInfo').textContent = `Page ${currentPage} of ${totalPages}`;
            document.getElementById('prevPage').disabled = currentPage === 1;
            document.getElementById('nextPage').disabled = currentPage === totalPages;
        }

        function changePage(delta) {
            const totalPages = Math.ceil(filteredRequests.length / itemsPerPage);
            const newPage = currentPage + delta;
            
            if (newPage >= 1 && newPage <= totalPages) {
                currentPage = newPage;
                updateRequestsTable();
                updatePagination();
            }
        }

        // MODAL FUNCTIONS
        function viewRequestDetails(requestId) {
            fetch('/Admin/GetAllServiceRequests')
                .then(res => res.json())
                .then(requests => {
                    const request = requests.find(r => r.id === requestId);
                    if (!request) return;
                    const content = `
                        <div><strong>Request ID:</strong> #${request.id}</div>
                        <div><strong>Homeowner:</strong> ${request.homeowner ? (request.homeowner.firstName + ' ' + request.homeowner.lastName) : 'N/A'}</div>
                        <div><strong>Service Type:</strong> ${request.serviceType}</div>
                        <div><strong>Priority:</strong> ${request.priority}</div>
                        <div><strong>Status:</strong> ${request.status}</div>
                        <div><strong>Date Submitted:</strong> ${request.dateSubmitted ? request.dateSubmitted.split('T')[0] : ''}</div>
                        <div><strong>Assigned Staff:</strong> ${request.assignedStaff ? (request.assignedStaff.firstName + ' ' + request.assignedStaff.lastName) : 'Not Assigned'}</div>
                        <div><strong>Description:</strong> ${request.description}</div>
                    `;
                    document.getElementById('requestDetailsContent').innerHTML = content;
                    document.getElementById('requestDetailsModal').style.display = 'block';
                });
        }

        function openAssignStaffModal(requestId) {
            const modal = document.getElementById('assignStaffModal');
            const staffSelect = document.getElementById('staffSelect');
            
            // Populate staff dropdown
            staffSelect.innerHTML = '<option value="">Select Staff Member</option>';
            sampleStaff.forEach(staff => {
                staffSelect.innerHTML += `<option value="${staff.id}">${staff.name} (${staff.position})</option>`;
            });
            
            modal.style.display = 'block';
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        function getStatusText(status) {
            const statusMap = {
                'pending': 'Pending',
                'accepted': 'Accepted',
                'rejected': 'Rejected',
                'in-progress': 'In Progress',
                'completed': 'Completed'
            };
            return statusMap[status] || status;
        }

        // FORM SUBMISSION
        document.getElementById('assignStaffForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const staffId = document.getElementById('staffSelect').value;
            const notes = document.getElementById('assignmentNotes').value;
            
            if (!staffId) {
                showNotification('Please select a staff member', 'error');
                return;
            }
            
            showNotification('Staff assigned successfully!', 'success');
            closeModal('assignStaffModal');
        });

        // NOTIFICATION
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // INITIALIZE
        document.addEventListener('DOMContentLoaded', initializeTables);
    </script>
</body>
