@model List<SubdivisionManagement.Model.Announcement>
@{
    ViewData["Title"] = "Staff Announcements";
}

<head>
    <!-- Boxicons -->
    <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
    <!-- My CSS -->
    <link rel="stylesheet" href="~/css/announcements.css" asp-append-version="true">
</head>

<body>
    <!-- SIDEBAR -->
    <section id="sidebar">
		<a href="#" class="brand">
			<i class='bx bxs-smile'></i>
			<span class="text">Staff</span>
		</a>
		<ul class="side-menu top">
			<li class="active">
				<a asp-area="" asp-controller="Staff" asp-action="Dashboard">
					<i class='bx bxs-dashboard'></i>
					<span class="text">Dashboard</span>
				</a>
			</li>
			<li>
				<a href="#">
					<i class='bx bxs-user'></i>
					<span class="text">Profile</span>
				</a>
			</li>
			<li>
				<a asp-action="Announcements" asp-controller="Staff">
					<i class='bx bxs-megaphone'></i>
					<span class="text">Announcement</span>
				</a>
			</li>
			<li>
				<a href="#">
					<i class='bx bxs-credit-card-front'></i>
					<span class="text">Payment and Billing</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Staff" asp-action="staff_services">
					<i class='bx bxs-briefcase'></i>
					<span class="text">Services</span>
				</a>
			</li>
            <li>
				<a asp-area="" asp-controller="Staff" asp-action="staff_community_forum">
					<i class='bx bxs-message-square-dots'></i>
					<span class="text">Community Forum</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Staff" asp-action="staff_security_visitors">
					<i class='bx bxs-shield-alt-2'></i>
					<span class="text">Security and Visitors</span>
				</a>
			</li>
			<li>
				<a href="#">
					<i class='bx bx-support'></i>
					<span class="text">Contact and Support</span>
				</a>
			</li>
		</ul>
		<ul class="side-menu">
			<li>
				<a href="#">
					<i class='bx bxs-cog'></i>
					<span class="text">Settings</span>
				</a>
			</li>
			<li>
				<a asp-action="logout" class="logout">
                    <i class='bx bxs-log-out-circle'></i>
                    <span class="text">Logout</span>
                </a>
			</li>
		</ul>
	</section>
    <!-- SIDEBAR -->

    <!-- CONTENT -->
    <section id="content">
        <!-- NAVBAR -->
        <nav>
            <i class='bx bx-menu'></i>
            <form action="#">
                <div class="form-input">
                    <input type="search" placeholder="Search...">
                    <button type="submit" class="search-btn"><i class='bx bx-search'></i></button>
                </div>
            </form>
            <input type="checkbox" id="switch-mode" hidden>
            <label for="switch-mode" class="switch-mode"></label>
        </nav>
        <!-- NAVBAR -->

        <!-- MAIN -->
        <main>
            <div class="head-title">
                <div class="left">
                    <h1>Announcements</h1>
                    <ul class="breadcrumb">
                        <li>
                            <a href="#">Dashboard</a>
                        </li>
                        <li><i class='bx bx-chevron-right'></i></li>
                        <li>
                            <a class="active" href="#">Announcements</a>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Display success or error messages -->
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success">
                    @TempData["Success"]
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["Error"]
                </div>
            }

            <div class="announcement-box">
                <!-- News Announcements -->
                <div class="announcement-category">
                    <div class="announcement-header">
                        <h3>News</h3>
                    </div>
                    <div class="announcement-list">
                        @foreach (var announcement in Model.Where(a => a.Type == "news"))
                        {
                            <div class="announcement-item">
                                <div class="announcement-content">
                                    <p class="date">@announcement.DateCreated.ToString("MMM dd, yyyy")</p>
                                    <p class="description">@announcement.Description</p>
                                    @if (!string.IsNullOrEmpty(announcement.ImagePath))
                                    {
                                        <img src="@announcement.ImagePath" alt="Announcement Image">
                                    }
                                    <p class="posted-by">Posted by: @announcement.Staff.FullName</p>
                                    <button class="btn-edit" onclick="openEditModal(@announcement.Id, '@announcement.Description', '@announcement.Type')">Edit</button>
                                    <button class="btn-delete" onclick="deleteAnnouncement(@announcement.Id)">Delete</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Events Announcements -->
                <div class="announcement-category">
                    <div class="announcement-header">
                        <h3>Events</h3>
                    </div>
                    <div class="announcement-list">
                        @foreach (var announcement in Model.Where(a => a.Type == "events"))
                        {
                            <div class="announcement-item">
                                <div class="announcement-content">
                                    <p class="date">@announcement.DateCreated.ToString("MMM dd, yyyy")</p>
                                    <p class="description">@announcement.Description</p>
                                    @if (!string.IsNullOrEmpty(announcement.ImagePath))
                                    {
                                        <img src="@announcement.ImagePath" alt="Announcement Image">
                                    }
                                    <p class="posted-by">Posted by: @announcement.Staff.FullName</p>
                                    <button class="btn-edit" onclick="openEditModal(@announcement.Id, '@announcement.Description', '@announcement.Type')">Edit</button>
                                    <button class="btn-delete" onclick="deleteAnnouncement(@announcement.Id)">Delete</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Maintenance Announcements -->
                <div class="announcement-category">
                    <div class="announcement-header">
                        <h3>Maintenance</h3>
                    </div>
                    <div class="announcement-list">
                        @foreach (var announcement in Model.Where(a => a.Type == "maintenance"))
                        {
                            <div class="announcement-item">
                                <div class="announcement-content">
                                    <p class="date">@announcement.DateCreated.ToString("MMM dd, yyyy")</p>
                                    <p class="description">@announcement.Description</p>
                                    @if (!string.IsNullOrEmpty(announcement.ImagePath))
                                    {
                                        <img src="@announcement.ImagePath" alt="Announcement Image">
                                    }
                                    <p class="posted-by">Posted by: @announcement.Staff.FullName</p>
                                    <button class="btn-edit" onclick="openEditModal(@announcement.Id, '@announcement.Description', '@announcement.Type')">Edit</button>
                                    <button class="btn-delete" onclick="deleteAnnouncement(@announcement.Id)">Delete</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </main>
        <!-- MAIN -->
    </section>
    <!-- CONTENT -->

    <!-- Edit Announcement Modal -->
    <div id="editAnnouncementModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Edit Announcement</h2>
            <form id="editAnnouncementForm" method="post" enctype="multipart/form-data" action="/Staff/EditAnnouncement">
                @Html.AntiForgeryToken() <!-- Add anti-forgery token -->
                <input type="hidden" id="editAnnouncementId" name="id" />
                <div class="form-group">
                    <label for="editAnnouncementType">Type:</label>
                    <select id="editAnnouncementType" name="type" class="form-control">
                        <option value="news">News</option>
                        <option value="events">Events</option>
                        <option value="maintenance">Maintenance</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="editAnnouncementDescription">Description:</label>
                    <textarea id="editAnnouncementDescription" name="description" class="form-control"></textarea>
                </div>
                <div class="form-group">
                    <label for="editAnnouncementImage">Image:</label>
                    <input type="file" id="editAnnouncementImage" name="image" class="form-control" />
                </div>
                <button type="submit" class="btn-add">Save Changes</button>
            </form>
        </div>
    </div>

    <style>
    .announcement-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        padding: 1rem;
    }

    .announcement-item {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 1rem;
    }

    .announcement-content {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .announcement-content img {
        max-width: 100%;
        height: auto;
        border-radius: 4px;
    }

    .date {
        color: #666;
        font-size: 0.9rem;
    }

    .description {
        font-size: 1rem;
        line-height: 1.5;
    }

    .posted-by {
        color: #666;
        font-size: 0.8rem;
        font-style: italic;
    }

    .btn-add {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-add:hover {
        background: #0056b3;
    }

    .btn-delete {
        background: #dc3545;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-delete:hover {
        background: #c82333;
    }

    .modal {
        display: none; /* Ensure the modal is hidden by default */
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1000;
        justify-content: center;
        align-items: center;
    }

    .modal.show {
        display: flex; /* Use flex to center the modal */
    }

    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        width: 400px;
        position: relative;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .modal-content .close {
        position: absolute;
        top: 10px;
        right: 10px;
        cursor: pointer;
        font-size: 20px;
        color: #333;
    }

    .btn-edit {
        background: #007bff;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-edit:hover {
        background: #0056b3;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: bold;
    }

    .form-group .form-control {
        width: 100%;
        padding: 0.5rem;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .alert {
        padding: 10px;
        margin-bottom: 20px;
        border-radius: 5px;
        font-size: 14px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
    </style>

    <script>
        function openModal(modalId) {
            document.getElementById(modalId).style.display = "block";
        }

        function openEditModal(id, description, type) {
            document.getElementById("editAnnouncementId").value = id;
            document.getElementById("editAnnouncementDescription").value = description;
            document.getElementById("editAnnouncementType").value = type;
            document.getElementById("editAnnouncementModal").classList.add("show");
        }

        function closeEditModal() {
            document.getElementById("editAnnouncementModal").classList.remove("show");
        }

        function deleteAnnouncement(id) {
            if (confirm("Are you sure you want to delete this announcement?")) {
                fetch(`/Staff/DeleteAnnouncement/${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("An error occurred while deleting the announcement.");
                });
            }
        }
    </script>
</body>